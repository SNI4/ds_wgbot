import discord, wikipedia, qrcode, nekos, requests, random, time, asyncio, os
from discord.ext import commands
from deep_translator import GoogleTranslator


class FunCommands(commands.Cog):
    def __init__(self, client):
        self.client = client

    # Ping
    @commands.command(aliases=['ping', '–ø–∏–Ω–≥'])
    async def –∑–∞–¥–µ—Ä–∂–∫–∞(self, ctx):
        message = await ctx.reply("–ü–æ–Ω–≥!", mention_author=False)
        await asyncio.sleep(0.5)
        await message.edit(content=f"–ü–æ–Ω–≥!  `{round(self.client.latency * 1000)} ms`")


    # Wiki
    @commands.command()
    async def –≤–∏–∫–∏(self, ctx, *, text):
        wikipedia.set_lang("ru")
        new_page = wikipedia.page(text)
        summ = wikipedia.summary(text)
        emb = discord.Embed(
            title=new_page.title,
            description=summ
        )
        emb.set_author(name='–ß–∏—Ç–∞—Ç—å –¥–∞–ª—å—à–µ', url=new_page.url,
                       icon_url='https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Wikipedia-logo-v2.svg/1200px-Wikipedia-logo-v2.svg.png')

        await ctx.reply(embed=emb, mention_author=False)

    # User-Card
    @commands.command()
    async def –∫–∞—Ä—Ç–∞(self, ctx, member: discord.Member):
        member = ctx.author if not member else member
        roles = [role for role in member.roles]

        embed = discord.Embed(colour=member.color, timestamp=ctx.message.created_at)

        embed.set_author(name=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - {member} ")
        embed.set_thumbnail(url=member.avatar_url)
        embed.set_footer(text=f"–ó–∞–ø—Ä–æ—Å–∏–ª : {ctx.author}", icon_url=ctx.author.avatar_url)

        embed.add_field(name="ID", value=member.id)
        embed.add_field(name="Name", value=member.display_name)

        embed.add_field(name="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω ", value=member.created_at.strftime("%a, %#d, %B, %Y, %I:%M %p UTC"))
        embed.add_field(name="–í–æ—à–µ–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä", value=member.joined_at.strftime("%a, %#d, %B, %Y, %I:%M %p UTC"))

        embed.add_field(name=f"–†–æ–ª–∏({len(roles)})", value="".join(role.mention for role in roles))
        embed.add_field(name="–í—ã—Å—à–∞—è —Ä–æ–ª—å", value=member.top_role.mention)

        embed.add_field(name="–ë–æ—Ç", value=member.bot)

        await ctx.send(embed=embed)

    # RP
    @commands.command(aliases=['—Ç—Ä–∞—Ö–Ω—É—Ç—å', '–æ—Ç—å–µ–±–∞—Ç—å', '–≤—ã–µ–±–∞—Ç—å'])
    async def —Å–µ–∫—Å(self, ctx, member: discord.Member):
        author = ctx.message.author
        await ctx.reply(f'{author.mention} –≤—ã–µ–±–∞–ª –ø–æ–ª—å–∑–æ–≤—Ç–µ–ª—è {member.mention} üò≥', mention_author=False)

    @commands.command()
    async def –æ—Ç—Å–æ—Å–∞—Ç—å(self, ctx, member: discord.Member):
        author = ctx.message.author
        await ctx.reply(f'{author.mention} –æ—Ç—Å–æ—Å–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.mention} üòè', mention_author=False)

    @commands.command()
    async def –æ—Ç–ø–∏–∑–¥–∏—Ç—å(self, ctx, member: discord.Member):
        author = ctx.message.author
        await ctx.reply(f'{author.mention} –æ—Ç–ø–∏–∑–¥–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.mention} ü§ï', mention_author=False)

    # QR Code
    @commands.command()
    async def –∫—É–∞—Ä(self, ctx, *, arg):
        value = arg
        img = qrcode.make(value)
        img.save('qrcode.png')
        with open('qrcode.png', 'rb') as gp:
            await ctx.reply(file=discord.File(gp, 'qrcode.png', mention_author=False))
        os.remove('qrcode.png')

    # Hentai
    @commands.command(aliases=['—Ö–µ–Ω—Ç'])
    async def —Ö–µ–Ω—Ç–∞–π(self, ctx):
        if ctx.channel.is_nsfw():

            r = ['pussy', 'hentai', 'anal', 'tits', 'kuni']
            rnek = nekos.img(random.choice(r))
            await ctx.reply(f'{rnek} {ctx.author.mention}, –¥—Ä–æ—á–∏!', mention_author=False)
        else:

            await ctx.reply(f'{ctx.author}, –ø–æ–ø—Ä–æ–±—É–π –≤ NSFW –∫–∞–Ω–∞–ª–µ.', mention_author=True)

    # IP-info
    @commands.command()
    async def –ø—Ä–æ–±–µ–π(self, ctx, arg):
        response = requests.get(f'http://ipinfo.io/{arg}/json')

        user_ip = response.json()['ip']
        user_city = response.json()['city']
        user_region = response.json()['region']
        user_country = response.json()['country']
        user_location = response.json()['loc']
        user_org = response.json()['org']
        user_timezone = response.json()['timezone']

        global all_info
        emb = discord.Embed(title=f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∞–π–ø–∏ {arg}:',
                            description=f':united_nations: **–°—Ç—Ä–∞–Ω–∞**: {user_city}\n\n:regional_indicator_r: **–†–µ–≥–∏–æ–Ω**: {user_region}\n\n:cityscape: **–ì–æ—Ä–æ–¥**: {user_country}\n\n:map: **–õ–æ–∫–∞—Ü–∏—è**: {user_location}\n\n:bust_in_silhouette: **–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è**: {user_org}\n\n:clock: **–í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞**: {user_timezone}',
                            colour=0x39d0d6, inline=False)
        emb.set_footer(text="–í—ã–∑–≤–∞–Ω–æ: {}".format(ctx.message.author), icon_url=ctx.message.author.avatar_url)

        await ctx.reply(embed=emb, mention_author=False)

    # Avatar
    @commands.command(name='–∞–≤–∞—Ç–∞—Ä', aliases=['–∞–≤–∞', '—Ñ–æ—Ç–æ', '–∞–≤–∞—Ç–∞—Ä–∫–∞', 'avatar', 'ava'])
    async def avatar(self, ctx, member: discord.Member = None):
        if member is None:
            await ctx.send(f'–§–æ—Ç–æ **–≤–∞—à–µ–≥–æ** –ø—Ä–æ—Ñ–∏–ª—è: {ctx.author.avatar_url}')
        else:
            await ctx.send(f'–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è **{member}**: {member.avatar_url}')

    # Translator
    # https://pypi.org/project/deep-translator/#check-supported-languages
    @commands.command(name='–ø–µ—Ä–µ–≤–µ—Å—Ç–∏', aliases=['tr', 'tl', '—Ç—Ä–∞–Ω—Å'])
    async def translate(self, ctx, lang='en', *, text):
        try:
            embed = discord.Embed(colour=15105570, title='translate')
            # embed.add_field(name='src', value=f'`{lang}`')
            embed.add_field(name='dest', value=f'`{lang}`')
            # embed.add_field(name='tr', value=f'`{ctranslator}`')
            embed.add_field(name='trs text', value=f'`{GoogleTranslator(source="auto", target=lang).translate(text)}`')
            embed.set_footer(text='func in dev')
            await ctx.send(embed=embed)
        except:
            embed = discord.Embed(colour=15158332, title='Error!')
            embed.add_field(name='error', value='wrong language or troubles with bot')
            embed.add_field(name='exc', value='try to change lang `(en)`', inline=False)
            embed.set_footer(text='func in dev')
            await ctx.send(embed=embed)


def setup(client):
    client.add_cog(FunCommands(client))
